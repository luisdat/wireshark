This document contains instructions on how to build and install Wireshark on Windows
using GCC and MinGW-w64 with the MSYS2 distribution.

The MSYS2 installer can be downloaded from https://www.msys2.org.

Wireshark is available as an MSYS2 binary package[1]. It can be installed using pacman,
for example using the UCRT64 shell:

    $ pacman -S mingw-w64-ucrt-x86_64-wireshark

If you wish to build wireshark from source code keep reading.

How to build Wireshark from source:

1. Open the shell for the selected 64-bit environment.

2. Build using CMake + Ninja:

    $ cd $srcdir
    $ mkdir build && cd build
    $ cmake ..
    $ ninja
    $ ninja test        # optional
    $ ninja install     # optional

The application should be launched using the same shell. Alternatively you
can also use the PKGBUILD included in the Wireshark distribution.

Currently the MSYS2 build has the following limitations compared to
the build using Visual Studio (MSVC):

* The Event Tracing for Windows (ETW) extcap cannot be compiled using MinGW-w64.

* Lua version is 5.1 (MSVC uses Lua 5.2) and does not have UTF-8 patches[2].

* Enhanced Kerberos dissection with decryption is not available.

* AirPcap SDK is not available. AirPcap is EOL and currently there is no plan to
  add support for it with MSYS2 builds.

* TODO: Add a stand-alone distributable binary installer that can be
  deployed outside the MSYS2 environment.

References:

[1]https://packages.msys2.org/base/mingw-w64-wireshark
[2]https://github.com/Lekensteyn/lua-unicode
